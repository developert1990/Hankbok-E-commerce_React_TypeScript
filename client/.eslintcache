[{"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\index.tsx":"1","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\userActions.ts":"2","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\productReducers.ts":"3","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\cartReducers.ts":"4","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\NavBar.tsx":"5","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\App.tsx":"6","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\Footer.tsx":"7","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\router\\routes.tsx":"8","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\AboutScreen.tsx":"9","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductDetailScreen.tsx":"10","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductsScreen.tsx":"11","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\MainCarousel.tsx":"12","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\userConstant.ts":"13","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\productConstants.ts":"14","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\cartConstant.ts":"15","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\SigninScreen.tsx":"16","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\CartScreen.tsx":"17","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\RegisterScreen.tsx":"18","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\IntroHanbok.tsx":"19","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\HomeScreen.tsx":"20","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\cartActions.ts":"21","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ShippingAddress.tsx":"22","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\PaymentMethodScreen.tsx":"23","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\orderReducers.ts":"24","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\PlaceOrderScreen.tsx":"25","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\store.ts":"26","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\orderConstant.ts":"27","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\OrderScreen.tsx":"28"},{"size":363,"mtime":1606377742845,"results":"29","hashOfConfig":"30"},{"size":2072,"mtime":1606366295027,"results":"31","hashOfConfig":"30"},{"size":2018,"mtime":1606366295039,"results":"32","hashOfConfig":"30"},{"size":3359,"mtime":1606464627725,"results":"33","hashOfConfig":"30"},{"size":2002,"mtime":1606378339830,"results":"34","hashOfConfig":"30"},{"size":176,"mtime":1606376658427,"results":"35","hashOfConfig":"30"},{"size":2884,"mtime":1606370894568,"results":"36","hashOfConfig":"30"},{"size":1683,"mtime":1606465118277,"results":"37","hashOfConfig":"30"},{"size":5062,"mtime":1606377190592,"results":"38","hashOfConfig":"30"},{"size":7027,"mtime":1606377336975,"results":"39","hashOfConfig":"30"},{"size":1365,"mtime":1606377382341,"results":"40","hashOfConfig":"30"},{"size":2754,"mtime":1606377480918,"results":"41","hashOfConfig":"30"},{"size":454,"mtime":1606366295033,"results":"42","hashOfConfig":"30"},{"size":386,"mtime":1606366295032,"results":"43","hashOfConfig":"30"},{"size":283,"mtime":1606464572100,"results":"44","hashOfConfig":"30"},{"size":4650,"mtime":1606383277235,"results":"45","hashOfConfig":"30"},{"size":4840,"mtime":1606366295043,"results":"46","hashOfConfig":"30"},{"size":6169,"mtime":1606383385204,"results":"47","hashOfConfig":"30"},{"size":543,"mtime":1606383428977,"results":"48","hashOfConfig":"30"},{"size":316,"mtime":1606377569113,"results":"49","hashOfConfig":"30"},{"size":1844,"mtime":1606464322622,"results":"50","hashOfConfig":"30"},{"size":3053,"mtime":1606418823752,"results":"51","hashOfConfig":"30"},{"size":1932,"mtime":1606464328064,"results":"52","hashOfConfig":"30"},{"size":2798,"mtime":1606472664589,"results":"53","hashOfConfig":"30"},{"size":6058,"mtime":1606472833006,"results":"54","hashOfConfig":"30"},{"size":2145,"mtime":1606465218464,"results":"55","hashOfConfig":"30"},{"size":417,"mtime":1606464788619,"results":"56","hashOfConfig":"30"},{"size":8079,"mtime":1606473078562,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"13ra4az",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\index.tsx",[],["121","122"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\userActions.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\productReducers.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\cartReducers.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\NavBar.tsx",[],["123","124"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\App.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\Footer.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\router\\routes.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\AboutScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductDetailScreen.tsx",["125"],"import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { detailsProduct } from '../actions/productActions';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport { Rating } from '../components/Rating';\r\nimport { initialAppStateType } from '../store';\r\nimport { ProductType } from '../types';\r\n\r\ninterface ProductScreenParamType {\r\n    id: string;\r\n}\r\n\r\nexport const ProductDetailScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const param: ProductScreenParamType = useParams();\r\n    const history = useHistory();\r\n    const [qty, setQty] = useState<number>(1);\r\n    const productId = param.id;\r\n    const productDetails = useSelector((state: initialAppStateType) => state.productDetailsStore);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    // const { description, image, name, numReviews, price, rating, countInStock } = product as ProductType;\r\n    // console.log('loading', loading)\r\n    if (error) {\r\n        console.log('loading', loading)\r\n    }\r\n    // console.log('product', product)\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsProduct(productId))\r\n    }, [dispatch, productId]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${productId}?qty=${qty}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <LoadingBox />) :\r\n                error ? (\r\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                ) : (\r\n                        <div>\r\n                            <Link to=\"/products\">Back to result</Link>\r\n\r\n                            {\r\n                                product &&\r\n                                <div className=\"row top\">\r\n                                    <div className=\"col-2\">\r\n                                        <img className=\"large\" src={product.image} alt={product.name}></img>\r\n                                    </div>\r\n                                    <div className=\"col-1\">\r\n                                        <ul>\r\n                                            <li>\r\n                                                <h1>{product.name}</h1>\r\n                                            </li>\r\n                                            <li>\r\n                                                <Rating rating={product.rating} numReviews={product.numReviews} />\r\n                                            </li>\r\n                                            <li>Price: ${product.price}</li>\r\n                                            <li>Description: <p>{product.description}</p></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-1\">\r\n                                        <div className=\"card card-body\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <div className=\"row\">\r\n                                                        <div>Price</div>\r\n                                                        <div className=\"price\">${product.price}</div>\r\n                                                    </div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <div className=\"row\">\r\n                                                        <div>Status: </div>\r\n                                                        <div>\r\n                                                            {\r\n                                                                // TODO: 여기 나중에 countInStock 으로 바꿔줘야함\r\n                                                                product.countInStock && product.countInStock > 0\r\n                                                                    ? <span className=\"success\">In Stock</span>\r\n                                                                    : <span className=\"danger\">Unavailable</span>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                                {/* 만약 stock 이 0 이상일 경우에만 띄워주게 만들었음 */}\r\n                                                {product.countInStock && product.countInStock > 0 && (\r\n                                                    <>\r\n                                                        <li>\r\n                                                            <div className=\"row\">\r\n                                                                <div>Qty</div>\r\n                                                                <div>\r\n\r\n                                                                    <select value={qty} onChange={(e: ChangeEvent<HTMLSelectElement>) => setQty(parseInt(e.target.value))}>\r\n                                                                        {\r\n                                                                            //이부분 한번 공부제대로 해볼것\r\n                                                                            //[...Array(4).keys()] 이렇게 하면 [0,1,2,3] 이라는 새로운 배열이 생성된다.\r\n                                                                            [...Array(product.countInStock).keys()].map(x => (\r\n                                                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                                            ))\r\n                                                                        }\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <button onClick={addToCartHandler} className=\"primary block\">Add to Cart</button>\r\n                                                        </li>\r\n                                                    </>\r\n\r\n                                                )}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductsScreen.tsx",["126","127"],"import React, { useEffect } from 'react';\r\nimport { Product } from '../components/Product';\r\nimport { ProductType } from '../types';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { initialAppStateType } from '../store';\r\nimport { ProductListInitialStateType } from '../reducers/productReducers';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nexport const ProductsScreen = () => {\r\n    const productList: ProductListInitialStateType = useSelector((state: initialAppStateType) => state.productListStore);\r\n    const { loading, error, products } = productList;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch]);\r\n    return (\r\n        <div>\r\n            {loading ?\r\n                <LoadingBox /> :\r\n                error ?\r\n                    <MessageBox variant=\"danger\">{error}</MessageBox> :\r\n                    <div className=\"row center\">\r\n                        {\r\n                            products.map((product) => (\r\n                                <Product key={product._id} product={product} />\r\n                            ))\r\n                        }\r\n                    </div>}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\MainCarousel.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\userConstant.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\productConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\cartConstant.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\SigninScreen.tsx",["128"],"import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { signin } from '../actions/userActions';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport { initialAppStateType } from '../store';\r\n\r\nexport const SigninScreen = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n    const userSignin = useSelector((state: initialAppStateType) => state.userStore);\r\n    const { userInfo, error, loading } = userSignin;\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('redirect:+++++', redirect)\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [userInfo, redirect, history])\r\n\r\n    const handleSignIn = () => {\r\n\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <div>\r\n                <form onSubmit={submitHandler} className=\"form\">\r\n                    <div>\r\n                        <h1>Sign In</h1>\r\n                    </div>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input type=\"email\" id=\"email\" placeholder=\"Enter email\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"email\" placeholder=\"Enter password\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label />\r\n                        <button className=\"primary\" type=\"submit\">Sign In</button>\r\n                        <div>\r\n                            <label />\r\n                            <div>\r\n                                New customer?{''}\r\n                                <Link to={`/register?redirect=${redirect}`}>Create your account</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n            <div className=\"signin\">\r\n                <div className=\"form\">\r\n                    <h1 className=\"form__title\">Sign In</h1>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                    <div className=\"form__base\">\r\n                        <input className=\"form__input\"\r\n                            placeholder=\"Email Address\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\r\n                            name=\"email\" />\r\n                        <input className=\"form__input\"\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\r\n                            name=\"password\"\r\n                            onKeyPress={event => event.key === 'Enter' ? handleSignIn() : null} />\r\n                        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                        <button onClick={handleSignIn} className=\"form__submit\" disabled={isInvalid} type=\"submit\">\r\n                            Sign In\r\n                            </button>\r\n                    </div>\r\n\r\n                    <div className=\"form__text\">\r\n                        New customer? <Link className=\"form__link\" to={`/register?redirect=${redirect}`}>Sign up now.</Link>\r\n                    </div>\r\n                    <div className=\"form__smallText\">\r\n                        This page is protected by Canada to ensure you're not a bot. Learn more.\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\CartScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\RegisterScreen.tsx",["129","130"],"import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { register } from '../actions/userActions';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport { initialAppStateType } from '../store';\r\n\r\nexport const RegisterScreen = () => {\r\n    const [name, setName] = useState<string>('');\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : '/';\r\n    const userRegister = useSelector((state: initialAppStateType) => state.registerStore);\r\n    const { userInfo, error, loading } = userRegister;\r\n\r\n    const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert('Password and confirm password are not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('userInfo:___', userInfo)\r\n        if (userInfo) {\r\n            console.log('redirect:___', redirect)\r\n            history.push(redirect);\r\n        }\r\n    }, [userInfo, redirect, history])\r\n\r\n\r\n\r\n\r\n    const [passwordConfirmError, setPasswordConfirmError] = useState<string>('');\r\n    const isInvalid = name === '' || password === '' || email === '' || confirmPassword === '';\r\n\r\n    const handleSignup = () => {\r\n        if (password !== confirmPassword) {\r\n            setPasswordConfirmError('Please Enter the same password');\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <div>\r\n                <form onSubmit={submitHandler} className=\"form\">\r\n                    <div>\r\n                        <h1>Create Account</h1>\r\n                    </div>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" id=\"name\" placeholder=\"Enter name\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input type=\"email\" id=\"email\" placeholder=\"Enter email\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" placeholder=\"Enter password\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"confirmPassword\">ConfirmPassword</label>\r\n                        <input type=\"password\" id=\"confirmPassword\" placeholder=\"Enter confirm password\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setConfirmPassword(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label />\r\n                        <button className=\"primary\" type=\"submit\">Register</button>\r\n                        <div>\r\n                            <label />\r\n                            <div>\r\n                                Already have an account?{''}\r\n                                <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n\r\n\r\n\r\n            <div className=\"signup\">\r\n                <div className=\"form\">\r\n                    <h1 className=\"form__title\">Sign Up</h1>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n\r\n                    <div className=\"form__base\">\r\n                        <input className=\"form__input\"\r\n                            placeholder=\"First Name\"\r\n                            value={name}\r\n                            onChange={({ target }) => setName(target.value)} />\r\n                        <input className=\"form__input\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email address\"\r\n                            value={email}\r\n                            onChange={({ target }) => setEmail(target.value)} />\r\n                        <input className=\"form__input\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Password\"\r\n                            onChange={({ target }) => setPassword(target.value)} />\r\n                        <input className=\"form__input\"\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Confirm Password\"\r\n                            onChange={({ target }) => setConfirmPassword(target.value)} />\r\n                        {passwordConfirmError}\r\n                        <button className=\"form__submit\" disabled={isInvalid} onClick={handleSignup} type=\"submit\">\r\n                            Sign Up\r\n                    </button>\r\n                        <div>\r\n                            Already have an account?{''}\r\n                            <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\IntroHanbok.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\HomeScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\cartActions.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ShippingAddress.tsx",["131"],"import React, { ChangeEvent, FormEvent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport { initialAppStateType } from '../store';\r\n\r\nexport const ShippingAddressScreen = () => {\r\n    const userSignin = useSelector((state: initialAppStateType) => state.userStore);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { userInfo } = userSignin;\r\n    const cart = useSelector((state: initialAppStateType) => state.cartStore);\r\n    const { shippingAddress } = cart\r\n    if (!userInfo) {\r\n        // 만약 로그아웃 한 상태에서 /shipping 을 했을 경우에 signin화면으로 돌아가게함\r\n        history.push('/signin');\r\n    }\r\n    const [fullName, setFullName] = useState<string>(shippingAddress?.fullName as string);\r\n    const [address, setAddress] = useState<string>(shippingAddress?.address as string);\r\n    const [city, setCity] = useState<string>(shippingAddress?.city as string);\r\n    const [postalCode, setPostalCode] = useState<string>(shippingAddress?.postalCode as string)\r\n    const [country, setCountry] = useState<string>(shippingAddress?.country as string)\r\n\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ fullName, address, city, postalCode, country }));\r\n        history.push('/payment');\r\n    }\r\n    const step = {\r\n        step1: true, step2: true, step3: false, step4: false\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Shipping Address</h1>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"fullName\">Full Name</label>\r\n                    <input type=\"text\" id=\"fullName\" placeholder=\"Enter full name\" value={fullName} onChange={(e: ChangeEvent<HTMLInputElement>) => setFullName(e.target.value)} required />\r\n                    <input type=\"text\" id=\"address\" placeholder=\"Enter address\" value={address} onChange={(e: ChangeEvent<HTMLInputElement>) => setAddress(e.target.value)} required />\r\n                    <input type=\"text\" id=\"city\" placeholder=\"Enter city\" value={city} onChange={(e: ChangeEvent<HTMLInputElement>) => setCity(e.target.value)} required />\r\n                    <input type=\"text\" id=\"postalCode\" placeholder=\"Enter postalCode\" value={postalCode} onChange={(e: ChangeEvent<HTMLInputElement>) => setPostalCode(e.target.value)} required />\r\n                    <input type=\"text\" id=\"country\" placeholder=\"Enter country\" value={country} onChange={(e: ChangeEvent<HTMLInputElement>) => setCountry(e.target.value)} required />\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        <button className=\"primary\" type=\"submit\">Continue</button>\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\PaymentMethodScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\orderReducers.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\PlaceOrderScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\store.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\orderConstant.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\OrderScreen.tsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"132","replacedBy":"136"},{"ruleId":"134","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":9,"column":10,"nodeType":"140","messageId":"141","endLine":9,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":21},{"ruleId":"138","severity":1,"message":"142","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":21,"column":11,"nodeType":"140","messageId":"141","endLine":21,"endColumn":24},{"ruleId":"138","severity":1,"message":"144","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":28},{"ruleId":"138","severity":1,"message":"143","line":22,"column":11,"nodeType":"140","messageId":"141","endLine":22,"endColumn":24},{"ruleId":"138","severity":1,"message":"145","line":30,"column":11,"nodeType":"140","messageId":"141","endLine":30,"endColumn":15},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],["146"],["147"],"@typescript-eslint/no-unused-vars","'ProductType' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'submitHandler' is assigned a value but never used.","'ChangeEvent' is defined but never used.","'step' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]