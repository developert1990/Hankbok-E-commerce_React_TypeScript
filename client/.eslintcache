[{"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\index.tsx":"1","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\userActions.ts":"2","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\productReducers.ts":"3","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\cartReducers.ts":"4","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\NavBar.tsx":"5","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\App.tsx":"6","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\Footer.tsx":"7","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\router\\routes.tsx":"8","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\AboutScreen.tsx":"9","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductDetailScreen.tsx":"10","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductsScreen.tsx":"11","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\MainCarousel.tsx":"12","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\userConstant.ts":"13","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\productConstants.ts":"14","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\cartConstant.ts":"15","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\SigninScreen.tsx":"16","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\CartScreen.tsx":"17","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\RegisterScreen.tsx":"18","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\IntroHanbok.tsx":"19","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\HomeScreen.tsx":"20","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\cartActions.ts":"21","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ShippingAddress.tsx":"22"},{"size":363,"mtime":1606377742845,"results":"23","hashOfConfig":"24"},{"size":2072,"mtime":1606366295027,"results":"25","hashOfConfig":"24"},{"size":2018,"mtime":1606366295039,"results":"26","hashOfConfig":"24"},{"size":2806,"mtime":1606418795873,"results":"27","hashOfConfig":"24"},{"size":2002,"mtime":1606378339830,"results":"28","hashOfConfig":"24"},{"size":176,"mtime":1606376658427,"results":"29","hashOfConfig":"24"},{"size":2884,"mtime":1606370894568,"results":"30","hashOfConfig":"24"},{"size":1262,"mtime":1606378175038,"results":"31","hashOfConfig":"24"},{"size":5062,"mtime":1606377190592,"results":"32","hashOfConfig":"24"},{"size":7027,"mtime":1606377336975,"results":"33","hashOfConfig":"24"},{"size":1365,"mtime":1606377382341,"results":"34","hashOfConfig":"24"},{"size":2754,"mtime":1606377480918,"results":"35","hashOfConfig":"24"},{"size":454,"mtime":1606366295033,"results":"36","hashOfConfig":"24"},{"size":386,"mtime":1606366295032,"results":"37","hashOfConfig":"24"},{"size":171,"mtime":1606418682329,"results":"38","hashOfConfig":"24"},{"size":4650,"mtime":1606383277235,"results":"39","hashOfConfig":"24"},{"size":4840,"mtime":1606366295043,"results":"40","hashOfConfig":"24"},{"size":6169,"mtime":1606383385204,"results":"41","hashOfConfig":"24"},{"size":543,"mtime":1606383428977,"results":"42","hashOfConfig":"24"},{"size":316,"mtime":1606377569113,"results":"43","hashOfConfig":"24"},{"size":1645,"mtime":1606418721230,"results":"44","hashOfConfig":"24"},{"size":3053,"mtime":1606418823752,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13ra4az",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\index.tsx",[],["95","96"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\userActions.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\productReducers.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\reducers\\cartReducers.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\NavBar.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\App.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\Footer.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\router\\routes.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\AboutScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductDetailScreen.tsx",["97"],"import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { detailsProduct } from '../actions/productActions';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport { Rating } from '../components/Rating';\r\nimport { initialAppStateType } from '../store';\r\nimport { ProductType } from '../types';\r\n\r\ninterface ProductScreenParamType {\r\n    id: string;\r\n}\r\n\r\nexport const ProductDetailScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const param: ProductScreenParamType = useParams();\r\n    const history = useHistory();\r\n    const [qty, setQty] = useState<number>(1);\r\n    const productId = param.id;\r\n    const productDetails = useSelector((state: initialAppStateType) => state.productDetailsStore);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    // const { description, image, name, numReviews, price, rating, countInStock } = product as ProductType;\r\n    // console.log('loading', loading)\r\n    if (error) {\r\n        console.log('loading', loading)\r\n    }\r\n    // console.log('product', product)\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsProduct(productId))\r\n    }, [dispatch, productId]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${productId}?qty=${qty}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <LoadingBox />) :\r\n                error ? (\r\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                ) : (\r\n                        <div>\r\n                            <Link to=\"/products\">Back to result</Link>\r\n\r\n                            {\r\n                                product &&\r\n                                <div className=\"row top\">\r\n                                    <div className=\"col-2\">\r\n                                        <img className=\"large\" src={product.image} alt={product.name}></img>\r\n                                    </div>\r\n                                    <div className=\"col-1\">\r\n                                        <ul>\r\n                                            <li>\r\n                                                <h1>{product.name}</h1>\r\n                                            </li>\r\n                                            <li>\r\n                                                <Rating rating={product.rating} numReviews={product.numReviews} />\r\n                                            </li>\r\n                                            <li>Price: ${product.price}</li>\r\n                                            <li>Description: <p>{product.description}</p></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-1\">\r\n                                        <div className=\"card card-body\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <div className=\"row\">\r\n                                                        <div>Price</div>\r\n                                                        <div className=\"price\">${product.price}</div>\r\n                                                    </div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <div className=\"row\">\r\n                                                        <div>Status: </div>\r\n                                                        <div>\r\n                                                            {\r\n                                                                // TODO: 여기 나중에 countInStock 으로 바꿔줘야함\r\n                                                                product.countInStock && product.countInStock > 0\r\n                                                                    ? <span className=\"success\">In Stock</span>\r\n                                                                    : <span className=\"danger\">Unavailable</span>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                                {/* 만약 stock 이 0 이상일 경우에만 띄워주게 만들었음 */}\r\n                                                {product.countInStock && product.countInStock > 0 && (\r\n                                                    <>\r\n                                                        <li>\r\n                                                            <div className=\"row\">\r\n                                                                <div>Qty</div>\r\n                                                                <div>\r\n\r\n                                                                    <select value={qty} onChange={(e: ChangeEvent<HTMLSelectElement>) => setQty(parseInt(e.target.value))}>\r\n                                                                        {\r\n                                                                            //이부분 한번 공부제대로 해볼것\r\n                                                                            //[...Array(4).keys()] 이렇게 하면 [0,1,2,3] 이라는 새로운 배열이 생성된다.\r\n                                                                            [...Array(product.countInStock).keys()].map(x => (\r\n                                                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                                            ))\r\n                                                                        }\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <button onClick={addToCartHandler} className=\"primary block\">Add to Cart</button>\r\n                                                        </li>\r\n                                                    </>\r\n\r\n                                                )}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ProductsScreen.tsx",["98","99"],"import React, { useEffect } from 'react';\r\nimport { Product } from '../components/Product';\r\nimport { ProductType } from '../types';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { initialAppStateType } from '../store';\r\nimport { ProductListInitialStateType } from '../reducers/productReducers';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nexport const ProductsScreen = () => {\r\n    const productList: ProductListInitialStateType = useSelector((state: initialAppStateType) => state.productListStore);\r\n    const { loading, error, products } = productList;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch]);\r\n    return (\r\n        <div>\r\n            {loading ?\r\n                <LoadingBox /> :\r\n                error ?\r\n                    <MessageBox variant=\"danger\">{error}</MessageBox> :\r\n                    <div className=\"row center\">\r\n                        {\r\n                            products.map((product) => (\r\n                                <Product key={product._id} product={product} />\r\n                            ))\r\n                        }\r\n                    </div>}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\MainCarousel.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\userConstant.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\productConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\constants\\cartConstant.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\SigninScreen.tsx",["100"],"import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { signin } from '../actions/userActions';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport { initialAppStateType } from '../store';\r\n\r\nexport const SigninScreen = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n    const userSignin = useSelector((state: initialAppStateType) => state.userStore);\r\n    const { userInfo, error, loading } = userSignin;\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('redirect:+++++', redirect)\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [userInfo, redirect, history])\r\n\r\n    const handleSignIn = () => {\r\n\r\n        dispatch(signin(email, password))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <div>\r\n                <form onSubmit={submitHandler} className=\"form\">\r\n                    <div>\r\n                        <h1>Sign In</h1>\r\n                    </div>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input type=\"email\" id=\"email\" placeholder=\"Enter email\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"email\" placeholder=\"Enter password\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label />\r\n                        <button className=\"primary\" type=\"submit\">Sign In</button>\r\n                        <div>\r\n                            <label />\r\n                            <div>\r\n                                New customer?{''}\r\n                                <Link to={`/register?redirect=${redirect}`}>Create your account</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n            <div className=\"signin\">\r\n                <div className=\"form\">\r\n                    <h1 className=\"form__title\">Sign In</h1>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                    <div className=\"form__base\">\r\n                        <input className=\"form__input\"\r\n                            placeholder=\"Email Address\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\r\n                            name=\"email\" />\r\n                        <input className=\"form__input\"\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\r\n                            name=\"password\"\r\n                            onKeyPress={event => event.key === 'Enter' ? handleSignIn() : null} />\r\n                        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                        <button onClick={handleSignIn} className=\"form__submit\" disabled={isInvalid} type=\"submit\">\r\n                            Sign In\r\n                            </button>\r\n                    </div>\r\n\r\n                    <div className=\"form__text\">\r\n                        New customer? <Link className=\"form__link\" to={`/register?redirect=${redirect}`}>Sign up now.</Link>\r\n                    </div>\r\n                    <div className=\"form__smallText\">\r\n                        This page is protected by Canada to ensure you're not a bot. Learn more.\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\CartScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\RegisterScreen.tsx",["101","102"],"import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { register } from '../actions/userActions';\r\nimport { LoadingBox } from '../components/LoadingBox';\r\nimport { MessageBox } from '../components/MessageBox';\r\nimport { initialAppStateType } from '../store';\r\n\r\nexport const RegisterScreen = () => {\r\n    const [name, setName] = useState<string>('');\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : '/';\r\n    const userRegister = useSelector((state: initialAppStateType) => state.registerStore);\r\n    const { userInfo, error, loading } = userRegister;\r\n\r\n    const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert('Password and confirm password are not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('userInfo:___', userInfo)\r\n        if (userInfo) {\r\n            console.log('redirect:___', redirect)\r\n            history.push(redirect);\r\n        }\r\n    }, [userInfo, redirect, history])\r\n\r\n\r\n\r\n\r\n    const [passwordConfirmError, setPasswordConfirmError] = useState<string>('');\r\n    const isInvalid = name === '' || password === '' || email === '' || confirmPassword === '';\r\n\r\n    const handleSignup = () => {\r\n        if (password !== confirmPassword) {\r\n            setPasswordConfirmError('Please Enter the same password');\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <div>\r\n                <form onSubmit={submitHandler} className=\"form\">\r\n                    <div>\r\n                        <h1>Create Account</h1>\r\n                    </div>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" id=\"name\" placeholder=\"Enter name\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input type=\"email\" id=\"email\" placeholder=\"Enter email\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" placeholder=\"Enter password\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"confirmPassword\">ConfirmPassword</label>\r\n                        <input type=\"password\" id=\"confirmPassword\" placeholder=\"Enter confirm password\" required onChange={(e: ChangeEvent<HTMLInputElement>) => setConfirmPassword(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label />\r\n                        <button className=\"primary\" type=\"submit\">Register</button>\r\n                        <div>\r\n                            <label />\r\n                            <div>\r\n                                Already have an account?{''}\r\n                                <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n\r\n\r\n\r\n            <div className=\"signup\">\r\n                <div className=\"form\">\r\n                    <h1 className=\"form__title\">Sign Up</h1>\r\n                    {loading && <LoadingBox />}\r\n                    {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n\r\n                    <div className=\"form__base\">\r\n                        <input className=\"form__input\"\r\n                            placeholder=\"First Name\"\r\n                            value={name}\r\n                            onChange={({ target }) => setName(target.value)} />\r\n                        <input className=\"form__input\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email address\"\r\n                            value={email}\r\n                            onChange={({ target }) => setEmail(target.value)} />\r\n                        <input className=\"form__input\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Password\"\r\n                            onChange={({ target }) => setPassword(target.value)} />\r\n                        <input className=\"form__input\"\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Confirm Password\"\r\n                            onChange={({ target }) => setConfirmPassword(target.value)} />\r\n                        {passwordConfirmError}\r\n                        <button className=\"form__submit\" disabled={isInvalid} onClick={handleSignup} type=\"submit\">\r\n                            Sign Up\r\n                    </button>\r\n                        <div>\r\n                            Already have an account?{''}\r\n                            <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\components\\IntroHanbok.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\HomeScreen.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\actions\\cartActions.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\hanbok_e-commerce-TypeScript\\client\\src\\screens\\ShippingAddress.tsx",["103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":21},{"ruleId":"108","severity":1,"message":"112","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":13},{"ruleId":"108","severity":1,"message":"113","line":21,"column":11,"nodeType":"110","messageId":"111","endLine":21,"endColumn":24},{"ruleId":"108","severity":1,"message":"114","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":28},{"ruleId":"108","severity":1,"message":"113","line":22,"column":11,"nodeType":"110","messageId":"111","endLine":22,"endColumn":24},{"ruleId":"108","severity":1,"message":"115","line":30,"column":11,"nodeType":"110","messageId":"111","endLine":30,"endColumn":15},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'ProductType' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'submitHandler' is assigned a value but never used.","'ChangeEvent' is defined but never used.","'step' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]